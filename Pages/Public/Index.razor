@page "/"
@using WebApp.Models
@using System.Net.Http.Json
@inject HttpClient Http

<!-- Navbar -->
<header class="bm-header navbar navbar-expand-lg navbar-dark bg-dark sticky-top" role="navigation" aria-label="Main">
  <div class="container">
    <a class="navbar-brand d-flex align-items-center" href="/">
      <img src="favicon.png" class="brand-logo me-2" alt="BioMaint logo" />
      <span class="brand-text">BioMaint</span>
    </a>

    <button class="navbar-toggler" type="button"
            data-bs-toggle="collapse" data-bs-target="#navbarNav"
            aria-controls="navbarNav" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav me-auto">
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navProduct" role="button" data-bs-toggle="dropdown">Product</a>
          <ul class="dropdown-menu" aria-labelledby="navProduct">
            <li><a class="dropdown-item" href="/product/work-orders">Work Orders</a></li>
            <li><a class="dropdown-item" href="/product/pm">Preventive Maintenance</a></li>
            <li><a class="dropdown-item" href="/product/assets">Assets & Warranty</a></li>
            <li><a class="dropdown-item" href="/product/inventory">Inventory & Parts</a></li>
            <li><a class="dropdown-item" href="/product/reports">Reports & Dashboards</a></li>
            <li><a class="dropdown-item" href="/product/mobile">Mobile CMMS App</a></li>
          </ul>
        </li>

        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navSolutions" role="button" data-bs-toggle="dropdown">Solutions</a>
          <ul class="dropdown-menu" aria-labelledby="navSolutions">
            <li><a class="dropdown-item" href="/solutions/hospitals">Hospitals</a></li>
            <li><a class="dropdown-item" href="/solutions/clinics">Clinics</a></li>
          </ul>
        </li>

        <li class="nav-item"><a class="nav-link" href="/enterprise">Enterprise</a></li>

        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navResources" role="button" data-bs-toggle="dropdown">Resources</a>
          <ul class="dropdown-menu" aria-labelledby="navResources">
            <li><a class="dropdown-item" href="/blog">Blog</a></li>
            <li><a class="dropdown-item" href="/faq">FAQ</a></li>
          </ul>
        </li>

        <li class="nav-item"><a class="nav-link" href="/pricing">Pricing</a></li>
      </ul>

      <div class="d-flex gap-2">
        <a class="btn btn-outline-light" href="/login">Log in</a>
        <a class="btn btn-primary" href="/demo">Book Demo</a>
      </div>
    </div>
  </div>
</header>

@if (!string.IsNullOrEmpty(errorMessage))
{
  <!-- Fallback: Static Hero when JSON is missing -->
  <section class="text-center py-5">
    <h1 class="fw-bold">Welcome to BioMaint</h1>
    <p class="lead">Modern CMMS for healthcare assets, work orders, and more.</p>
    <div class="d-flex justify-content-center gap-3 mt-3">
      <a class="btn btn-primary btn-lg" href="/demo">Book Demo</a>
      <a class="btn btn-outline-light btn-lg" href="/login">Get Started</a>
    </div>
  </section>
}
else if (landing is null)
{
  <div class="text-center py-5">
    <div class="spinner-border text-primary" role="status"></div>
    <p class="mt-3">Loading…</p>
  </div>
}
else
{
  <!-- Hero -->
  <section class="text-center py-5">
    @if (!string.IsNullOrWhiteSpace(landing.Hero?.Eyebrow))
    {
      <h5 class="text-success">@landing.Hero.Eyebrow</h5>
    }
    <h1 class="fw-bold">@landing.Hero?.Title</h1>
    @if (!string.IsNullOrWhiteSpace(landing.Hero?.Subtitle))
    {
      <p class="lead">@landing.Hero.Subtitle</p>
    }

    <div class="d-flex justify-content-center gap-3 mt-3">
      @if (!string.IsNullOrWhiteSpace(landing.Hero?.CtaText))
      {
        <a class="btn btn-primary btn-lg" href="@landing.Hero.CtaHref">@landing.Hero.CtaText</a>
      }
      @if (!string.IsNullOrWhiteSpace(landing.Hero?.SecondaryCtaText))
      {
        <a class="btn btn-outline-light btn-lg" href="@landing.Hero.SecondaryCtaHref">@landing.Hero.SecondaryCtaText</a>
      }
    </div>

    @if (!string.IsNullOrWhiteSpace(landing.Hero?.Image))
    {
      <img src="@landing.Hero.Image"
           alt="@(string.IsNullOrWhiteSpace(landing.Hero.ImageAlt) ? "Hero image" : landing.Hero.ImageAlt)"
           class="img-fluid mt-4 rounded" />
    }
  </section>

  <!-- Trust -->
  <section class="bg-dark text-light py-5 text-center">
    <div class="container">
      @if (!string.IsNullOrWhiteSpace(landing.Trust?.Headline))
      {
        <p class="mb-3">@landing.Trust.Headline</p>
      }
      <div class="d-flex justify-content-center gap-4 flex-wrap">
        @if (landing.Trust?.Badges is not null)
        {
          @foreach (var badge in landing.Trust.Badges)
          {
            <span class="d-inline-flex align-items-center gap-2">
              <i class="@Bi(badge.Icon)" aria-hidden="true"></i>
              <span>@badge.Label</span>
            </span>
          }
        }
      </div>
    </div>
  </section>

  <!-- Features -->
  <section class="py-5 section-bg">
    <div class="container">
      <h2 class="mb-4 text-center">Core Features</h2>
      <div class="row g-4">
        @if (landing.Features is not null)
        {
          @foreach (var feature in landing.Features)
          {
            <div class="col-md-4 text-center">
              <div class="feature-icon mb-2 fs-2">
                <i class="@Bi(feature.Icon)" aria-hidden="true"></i>
              </div>
              <h5>@feature.Title</h5>
              @if (!string.IsNullOrWhiteSpace(feature.Subtitle))
              {
                <p>@feature.Subtitle</p>
              }
              @if (!string.IsNullOrWhiteSpace(feature.Link))
              {
                <a href="@feature.Link" class="small text-primary">Learn more →</a>
              }
            </div>
          }
        }
      </div>
    </div>
  </section>

  <!-- Cross-Platform -->
  <section class="py-5 bg-dark text-light">
    <div class="container text-center">
      <h2>@landing.CrossPlatform?.Title</h2>
      @if (!string.IsNullOrWhiteSpace(landing.CrossPlatform?.Subtitle))
      {
        <p>@landing.CrossPlatform.Subtitle</p>
      }
      <div class="row justify-content-center g-4 mt-4">
        <div class="col-md-4">
          <img src="@landing.CrossPlatform?.MobileImage" class="img-fluid rounded" alt="Mobile app" />
        </div>
        <div class="col-md-6">
          <img src="@landing.CrossPlatform?.DesktopImage" class="img-fluid rounded" alt="Desktop dashboard" />
        </div>
      </div>
    </div>
  </section>

  <!-- Healthcare Essentials -->
  <section class="py-5">
    <div class="container text-center">
      <h2 class="mb-4">Healthcare Essentials</h2>
      <div class="row g-4">
        @if (landing.HealthcareEssentials is not null)
        {
          @foreach (var item in landing.HealthcareEssentials)
          {
            <div class="col-md-4">
              <div class="feature-icon mb-2 fs-2">
                <i class="@Bi(item.Icon)" aria-hidden="true"></i>
              </div>
              <h5>@item.Title</h5>
              @if (!string.IsNullOrWhiteSpace(item.Subtitle))
              {
                <p>@item.Subtitle</p>
              }
            </div>
          }
        }
      </div>
    </div>
  </section>

  <!-- Analytics -->
  <section class="py-5 section-bg text-center">
    <div class="container">
      <h2>@landing.Analytics?.Title</h2>
      @if (!string.IsNullOrWhiteSpace(landing.Analytics?.Subtitle))
      {
        <p class="lead">@landing.Analytics.Subtitle</p>
      }
    </div>
  </section>

  <!-- Support -->
  <section class="py-5 text-center">
    <div class="container">
      <h2>@landing.Support?.Title</h2>
      @if (!string.IsNullOrWhiteSpace(landing.Support?.Subtitle))
      {
        <p class="lead">@landing.Support.Subtitle</p>
      }
    </div>
  </section>

  <!-- Pricing -->
  <section class="py-5 bg-dark text-light">
    <div class="container">
      <h2 class="mb-4 text-center">Pricing</h2>
      <div class="row g-4">
        @if (landing.Pricing is not null)
        {
          @foreach (var plan in landing.Pricing)
          {
            <div class="col-md-4">
              <div class="p-4 border rounded text-center h-100">
                <h5>@plan.Title</h5>
                @if (!string.IsNullOrWhiteSpace(plan.Subtitle))
                {
                  <p>@plan.Subtitle</p>
                }
              </div>
            </div>
          }
        }
      </div>
    </div>
  </section>

  <!-- Footer -->
  <footer class="bm-footer bg-dark text-light py-4">
    <div class="container">
      <div class="footer-grid">
        <div>
          <div class="footer-title">BioMaint</div>
          <p class="text-muted mb-0">Modern CMMS for healthcare.</p>
        </div>
        <div>
          <div class="footer-title">Product</div>
          <a class="footer-link" href="/product/work-orders">Work Orders</a>
          <a class="footer-link" href="/product/pm">Preventive Maintenance</a>
          <a class="footer-link" href="/product/reports">Reports</a>
        </div>
        <div>
          <div class="footer-title">Company</div>
          <a class="footer-link" href="/about">About</a>
          <a class="footer-link" href="/blog">Blog</a>
        </div>
        <div>
          <div class="footer-title">Legal</div>
          <a class="footer-link" href="/terms">Terms</a>
          <a class="footer-link" href="/privacy">Privacy</a>
        </div>
      </div>
    </div>
  </footer>
}

@code {
  private LandingModel? landing;
  private string? errorMessage;

  private const string ContentPath = "content/landing.json";

  protected override async Task OnInitializedAsync()
  {
    try
    {
      landing = await Http.GetFromJsonAsync<LandingModel>(ContentPath);
      if (landing is null)
      {
        errorMessage = $"No data in {ContentPath}.";
      }
    }
    catch (Exception ex)
    {
      errorMessage = $"Could not load {ContentPath}. ({ex.Message})";
      Console.Error.WriteLine($"Failed to load {ContentPath}: {ex}");
    }
  }

  private static string Bi(string? shortName)
    => string.IsNullOrWhiteSpace(shortName) ? "bi bi-dot" : $"bi bi-{shortName.Trim()}";
}
