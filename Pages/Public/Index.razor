@page "/"
@layout PublicLayout
@using WebApp.Models
@using System.Text.Json
@inject WebApp.Services.ContentService Content

@code {
    LandingModel? M;

    // Extra JSON bags (local to this page; no new shared models)
    record Metric(string Icon, string Title, string? Note, string? Desc);
    List<Metric> Metrics = new();

    record HowStep(string Icon, string Title, string? Desc);
    List<HowStep> How = new();

    protected override async Task OnInitializedAsync()
    {
        M = await Content.GetLandingModelAsync();

        // Read landing.json directly for analytics.metrics + howItWorks
        using var doc = await Content.GetAsync<JsonDocument>("landing");
        if (doc is null) return;

        var root = doc.RootElement;

        static string? Str(JsonElement e, string key)
            => e.TryGetProperty(key, out var v) && v.ValueKind == JsonValueKind.String ? v.GetString() : null;

        static IEnumerable<JsonElement> Arr(JsonElement e, string key)
            => e.TryGetProperty(key, out var v) && v.ValueKind == JsonValueKind.Array ? v.EnumerateArray() : Enumerable.Empty<JsonElement>();

        if (root.TryGetProperty("analytics", out var analytics) && analytics.ValueKind == JsonValueKind.Object)
        {
            foreach (var m in Arr(analytics, "metrics"))
            {
                Metrics.Add(new Metric(
                    Icon : Str(m, "icon")  ?? "bi-activity",
                    Title: Str(m, "title") ?? "",
                    Note : Str(m, "note"),
                    Desc : Str(m, "desc")
                ));
            }
        }

        if (root.TryGetProperty("howItWorks", out var how) && how.ValueKind == JsonValueKind.Object)
        {
            foreach (var s in Arr(how, "steps"))
            {
                How.Add(new HowStep(
                    Icon : Str(s, "icon")  ?? "bi-check2-square",
                    Title: Str(s, "title") ?? "",
                    Desc : Str(s, "desc")
                ));
            }
        }
    }
}

@if (M is null)
{
  <div class="container py-5 text-center text-muted">Loading…</div>
}
else
{
  <!-- ================= HERO ================= -->
  <section class="hero text-center text-lg-start">
    <div class="container">
      <div class="row align-items-center g-5">
        <div class="col-lg-6">
          <h1 class="display-5 fw-bold">@M.Hero.Title</h1>
          @if (!string.IsNullOrWhiteSpace(M.Hero.Subtitle))
          {
            <p class="lead section-sub">@M.Hero.Subtitle</p>
          }
          <div class="d-flex gap-3 justify-content-center justify-content-lg-start">
            @if (!string.IsNullOrWhiteSpace(M.Hero.CtaText))
            {
              <a class="btn btn-primary btn-lg" href="@M.Hero.CtaHref">@M.Hero.CtaText</a>
            }
            @if (!string.IsNullOrWhiteSpace(M.Hero.SecondaryCtaText))
            {
              <a class="btn btn-outline-light btn-lg" href="@M.Hero.SecondaryCtaHref">@M.Hero.SecondaryCtaText</a>
            }
          </div>
          @if (!string.IsNullOrWhiteSpace(M.Hero.ImageAlt))
          {
            <p class="muted mt-3">@M.Hero.ImageAlt</p>
          }
        </div>

        <div class="col-lg-6">
          <div class="mock ratio ratio-16x9 d-flex align-items-center justify-content-center">
            <span class="muted">[Dashboard Mockup]</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- =============== FEATURES =============== -->
  <section id="features">
    <div class="container">
      <h2 class="text-center mb-2">Everything you need in one CMMS — one place for every maintenance task</h2>
      <p class="section-sub text-center mb-5">
        Unify requests, PM schedules, equipment records, inventory, vendors, and reporting so your team moves faster and sees the same truth.
      </p>

      <div class="row g-4">
        @foreach (var c in M.Features)
        {
          <div class="col-sm-6 col-lg-3">
            <div class="feature-card h-100">
              @if (!string.IsNullOrWhiteSpace(c.Icon))
              {
                <div class="feature-icon"><i class="bi @c.Icon"></i></div>
              }
              <h6>@c.Title</h6>
              @if (!string.IsNullOrWhiteSpace(c.Subtitle))
              {
                <p class="muted mb-0">@c.Subtitle</p>
              }
            </div>
          </div>
        }
      </div>
    </div>
  </section>

  <!-- ============ MOBILE / CROSS-PLATFORM ============ -->
  <section id="mobile" class="orb-bg">
    <div class="container">
      <div class="row g-4 align-items-center">
        <div class="col-lg-6 reveal">
          <h2>@M.CrossPlatform.Title</h2>
          <p class="section-sub">@M.CrossPlatform.Subtitle</p>

          @if (M.HealthcareEssentials?.Count > 0)
          {
            <div class="micro-features" aria-label="Mobile highlights">
              @foreach (var e in M.HealthcareEssentials)
              {
                <div class="micro">
                  @if (!string.IsNullOrWhiteSpace(e.Icon)) { <i class="bi @e.Icon"></i> }
                  <div>
                    <div class="fw-semibold">@e.Title</div>
                    @if (!string.IsNullOrWhiteSpace(e.Subtitle)) { <small>@e.Subtitle</small> }
                  </div>
                </div>
              }
            </div>
          }

          <div class="d-flex gap-3 mt-3">
            @if (!string.IsNullOrWhiteSpace(M.Hero.SecondaryCtaText))
            {
              <a class="btn btn-primary" href="@M.Hero.SecondaryCtaHref">See Mobile Features</a>
            }
            <a class="btn btn-outline-light" href="#">Get Android app</a>
          </div>
        </div>

        <div class="col-lg-6 reveal" style="transition-delay:.08s">
          <div class="glow-card ratio ratio-16x9 floaty d-flex align-items-center justify-content-center" aria-label="Supported platforms">
            <div class="platform-icons">
              <div class="platform-icon pi-win"><i class="bi bi-windows"></i><span>Windows</span></div>
              <div class="platform-icon pi-and"><i class="bi bi-android2"></i><span>Android</span></div>
              <div class="platform-icon pi-ios"><i class="bi bi-apple"></i><span>iOS</span></div>
              <div class="platform-icon pi-web"><i class="bi bi-globe2"></i><span>Web</span></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- ================== ANALYTICS ================== -->
  <section>
    <div class="container text-center">
      <h2 class="mb-3 reveal">@M.Analytics.Title</h2>
      @if (!string.IsNullOrWhiteSpace(M.Analytics.Subtitle))
      {
        <p class="section-sub reveal" style="transition-delay:.05s">@M.Analytics.Subtitle</p>
      }
      <div class="row g-4 mt-2">
        @for (var i = 0; i < Metrics.Count; i++)
        {
          var m = Metrics[i];
          var delay = i == 0 ? "" : (i == 1 ? "transition-delay:.06s" : "transition-delay:.1s");
          <div class="col-md-4 reveal" style="@delay">
            <div class="metric-card h-100">
              <div class="metric-title">
                <div class="metric-ico"><i class="bi @m.Icon"></i></div>
                <strong>@m.Title</strong>
              </div>
              <!-- Static sparkline (visual accent) -->
              <svg class="sparkline" viewBox="0 0 100 30" preserveAspectRatio="none" aria-hidden="true">
                <polyline fill="none" stroke="currentColor" stroke-width="2" opacity=".28" points="0,22 16,24 32,20 48,23 64,17 80,19 100,14" />
                <polyline fill="none" stroke="var(--brand)" stroke-width="2.2" points="0,26 15,24 30,26 45,21 60,18 75,15 90,16 100,12" />
              </svg>
              @if (!string.IsNullOrWhiteSpace(m.Note))
              {
                <div class="metric-note">@m.Note</div>
              }
            </div>
          </div>
        }
      </div>
    </div>
  </section>

  <!-- ================== KPI BAND ================== -->
  @if (M.Kpis is not null && M.Kpis.Count > 0)
  {
    <section class="kpi-band">
      <div class="container text-center">
        <h2 class="mb-2">Teams see results in weeks</h2>
        <p class="section-sub">Real outcomes customers report after going live with BioMaint.</p>

        <div class="row g-4 mt-2">
          @foreach (var k in M.Kpis)
          {
            <div class="col-lg-4">
              <div class="kpi-card h-100">
                <div class="kpi-value" style="@k.Style">@k.Value</div>
                <div class="kpi-text">@k.Text</div>
              </div>
            </div>
          }
        </div>
      </div>
    </section>
  }

  <!-- ============== TESTIMONIALS ============== -->
  @if (M.Testimonials is not null && M.Testimonials.Items?.Count > 0)
  {
    <section>
      <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h2 class="testi-head m-0">@((MarkupString)M.Testimonials.TitleHtml)</h2>
          <div class="testi-ctrl">
            <button class="ctrl-btn" id="tPrev" aria-label="Previous"><i class="bi bi-arrow-left"></i></button>
            <button class="ctrl-btn" id="tNext" aria-label="Next"><i class="bi bi-arrow-right"></i></button>
          </div>
        </div>
        @if (!string.IsNullOrWhiteSpace(M.Testimonials.Subtitle))
        {
          <p class="section-sub mb-3">@M.Testimonials.Subtitle</p>
        }
        <div class="testi-wrap">
          <div class="testi-track" id="testiTrack">
            @foreach (var t in M.Testimonials.Items)
            {
              <article class="testi-card">
                <div class="testi-user">
                  <img src="@t.Img" alt="@t.Name" />
                  <div>
                    <strong>@t.Name</strong>
                    <div class="muted">@t.Role</div>
                  </div>
                </div>
                <p>@t.Quote</p>
              </article>
            }
          </div>
        </div>
      </div>
    </section>
  }

  <!-- ================= HOW IT WORKS ================= -->
  @if (How.Count > 0)
  {
    <section>
      <div class="container">
        <h2 class="text-center mb-5">How it works</h2>
        <div class="row g-4">
          @for (var i = 0; i < How.Count; i++)
          {
            var s = How[i];
            <div class="col-md-4">
              <div class="solution-card text-center h-100">
                <div class="feature-icon mx-auto"><i class="bi @s.Icon"></i></div>
                <h6>@(i+1). @s.Title</h6>
                @if (!string.IsNullOrWhiteSpace(s.Desc))
                {
                  <p class="muted mb-0">@s.Desc</p>
                }
              </div>
            </div>
          }
        </div>
      </div>
    </section>
  }

  <!-- ================= SOLUTIONS ================= -->
  @if (M.Solutions is not null && M.Solutions.Tabs?.Count > 0)
  {
    <section id="solutions" class="bg-body-tertiary">
      <div class="container">
        <h2 class="text-center mb-4">@M.Solutions.Title</h2>

        <ul class="nav nav-pills justify-content-center gap-2 mb-4" role="tablist">
          @for (var i = 0; i < M.Solutions.Tabs.Count; i++)
          {
            var tab = M.Solutions.Tabs[i];
            <li class="nav-item" role="presentation">
              <button class="nav-link @(i==0 ? "active" : null)" data-bs-toggle="pill" data-bs-target="@($"#{tab.Id}")" type="button">@tab.Label</button>
            </li>
          }
        </ul>

        <div class="tab-content">
          @for (var i = 0; i < M.Solutions.Tabs.Count; i++)
          {
            var tab = M.Solutions.Tabs[i];
            <div class="tab-pane fade @(i==0 ? "show active" : null)" id="@tab.Id">
              <div class="row g-4">
                @foreach (var c in tab.Cards)
                {
                  <div class="col-md-4">
                    <div class="solution-card h-100">
                      <h6>@c.Title</h6>
                      @if (!string.IsNullOrWhiteSpace(c.Subtitle))
                      {
                        <p class="muted mb-0">@c.Subtitle</p>
                      }
                    </div>
                  </div>
                }
              </div>
            </div>
          }
        </div>
      </div>
    </section>
  }

  <!-- =============== FINAL CTA =============== -->
  @if (M.FinalCta is not null)
  {
    <section class="text-center">
      <div class="container">
        <div class="p-5 rounded-4" style="background:var(--card); border:1px solid var(--border); box-shadow:var(--elev);">
          <h2 class="mb-2">@M.FinalCta.Title</h2>
          @if (!string.IsNullOrWhiteSpace(M.FinalCta.Subtitle))
          {
            <p class="section-sub mb-4">@M.FinalCta.Subtitle</p>
          }
          <div class="d-flex gap-3 justify-content-center">
            <a class="btn btn-primary btn-lg" href="@M.FinalCta.PrimaryHref">@M.FinalCta.PrimaryText</a>
            <a class="btn btn-outline-light btn-lg" href="@M.FinalCta.SecondaryHref">@M.FinalCta.SecondaryText</a>
          </div>
        </div>
      </div>
    </section>
  }

  <!-- Chatbot -->
  <button class="chatbot-btn focus-ring" aria-label="Chat with us">
    <i class="bi bi-chat-dots fs-4"></i>
  </button>
}
